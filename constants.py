# Consts
test_token = "test_token"
release_token = "release_token"
my_id = 200466757
ks_id = 71591548
url = 'http://timetable.spbu.ru'
main_answer = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n\U00002139 - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\U00002B50 - –æ—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞/–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\n\U00002699 - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\U0001F689 - —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∏\n\U0001F4DD - —Ä–µ–¥–∞–∫—Ç–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è'

cookies = {'_gat': '1', '_ga': 'GA1.2.76615387.1488377623', '_culture': 'ru'}
users = {}

full_info_answer = '–ò–ù–§–û–†–ú–ê–¶–ò–Ø\n\n*–†–∞–∑–¥–µ–ª "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"*\n\U00002022 –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –±–µ—Ä–µ—Ç—Å—è —Å *–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –°–ü–±–ì–£* - http://timetable.spbu.ru\n\U00002022 –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:\n    –í—Ä–µ–º—è\n    –¢–∏–ø - –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞—Ä—ã\n    –ê–¥—Ä–µ—Å1 (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å1);\n    –ê–¥—Ä–µ—Å2 (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å2);\n    –∏ —Ç.–¥.\n\U00002022 –í –ª—é–±–æ–π –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–º–æ—Ç—Ä–∏—Ç—Å—è –ø–æ *—Ç–µ–∫—É—â–µ–π* –Ω–µ–¥–µ–ª–µ –¥–æ –í–û–°–ö–†–ï–°–ï–ù–¨–Ø. –í –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–∏.\n\U00002022 _–ï—Å–ª–∏ –∑–∞–Ω—è—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –±–æ—Ç –µ–≥–æ –Ω–µ –ø—Ä–∏—à–ª–µ—Ç._\n\U00002022 üìÖ –ø–æ–∑–≤–æ–ª–∏—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –¥–Ω—è –±–æ—Ç –ø—Ä–∏—à–ª–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è *—Ç–µ–∫—É—â–µ–π* –Ω–µ–¥–µ–ª–∏, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π.\n\U00002022 –í —ç—Ç–æ–º –∂–µ —Ä–∞–∑–¥–µ–ª–µ –º–æ–∂–Ω–æ _–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É_ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è -\U000023F0. –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 21:00. –û –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω—è—Ö –±–æ—Ç –Ω–µ —É–≤–µ–¥–æ–º–ª—è–µ—Ç.\n\n' +\
              '*–†–∞–∑–¥–µ–ª "‚öô"*\n\U00002022 –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /settings.\n\U00002022 –í–æ –≤—Ä–µ–º—è _—Å–º–µ–Ω—ã –≥—Ä—É–ø–ø—ã_ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π *–ù–∞–∑–∞–¥* –¥–ª—è –æ—Ç–º–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ _–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é_.\n\U00002022 –í *—à–∞–±–ª–æ–Ω–∞—Ö* –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –≥—Ä—É–ø–ø–∞–º–∏.\n\U00002022 –ö–Ω–æ–ø–∫–∞ _–°–æ—Ö—Ä–∞–Ω–∏—Ç—å_ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É –∫–∞–∫ —à–∞–±–ª–æ–Ω.\n\U00002022 –ö–Ω–æ–ø–∫–∞ _–£–¥–∞–ª–∏—Ç—å_ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª–∏—Ç—å –ª—é–±—É—é –≥—Ä—É–ø–ø—É –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö.\n\U00002022 –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç _—Ä–µ–¥–∞–∫—Ç–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è_, –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–Ω–∞ –µ—â–µ –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ "\U0001F4DD\U00002753", –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç _–æ—Å—Ç–∞–≤–∏—Ç—å_ –∏–ª–∏ _—É–±—Ä–∞—Ç—å_ —Å–∫—Ä—ã—Ç—ã–µ –ø–∞—Ä—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ *—à–∞–±–ª–æ–Ω—ã*.\n\U00002022 –ï—Å–ª–∏ —Ç—ã —Ä–µ—à–∏—à—å –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, *–∑–∞–≤–µ—Ä—à–∏ —Ä–∞–±–æ—Ç—É* —Å –Ω–∏–º (–¥–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º –Ω–∞–ø–∏—Å–∞—Ç—å /exit –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å _‚Äú–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º‚Äù_ –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫. _–ü—Ä–æ—Å—Ç–æ —É–¥–∞–ª–∏—Ç—å –¥–∏–∞–ª–æ–≥ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ_). –ë–æ—Ç—É –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ –≤—Å–µ—Ö –ø–æ–º–Ω–∏—Ç—å, –∏ —Ç—ã, —Ä–µ—à–∏–≤ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –æ–±–ª–µ–≥—á–∏—à—å –µ–º—É —Ä–∞–±–æ—Ç—É (–∞ –º–Ω–µ - –∞—Ä–µ–Ω–¥—É —Ö–æ—Å—Ç–∏–Ω–≥–∞\U0001F609)\n\n' +\
              '*–†–∞–∑–¥–µ–ª "‚≠ê"*\n\U00002022 _–°–ª–µ–¥—É—é—â–µ–µ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ_ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã _–±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ_, –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –µ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—Ç–∏—Ç, –µ—Å–ª–∏ —ç—Ç–æ –±—É–¥–µ—Ç –≤–æ–ø—Ä–æ—Å.\n\n' +\
              '*–†–∞–∑–¥–µ–ª "\U0001F4DD"*\n\U00002022 –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã _—Å–∫—Ä—ã—Ç—å –∑–∞–Ω—è—Ç–∏–µ_, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n   1. –í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å, –∫–æ–≥–¥–∞ –µ—Å—Ç—å —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ;\n   2. –í—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ;\n   3. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º, –∫–æ–≥–¥–∞ —Å–∫—Ä—ã–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ.\n\U00002022 –ó–∞–Ω—è—Ç–∏–µ –º–æ–∂–Ω–æ _—Å–∫—Ä—ã—Ç—å_:\n   1. –í –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å—Ç—å –¥–≤–µ –ø–∞—Ä—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –≤ —Å—É–±–±–æ—Ç—É, –ø–µ—Ä–≤–∞—è –∏ –≤—Ç–æ—Ä–∞—è. –≠—Ç–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –º–æ–∂–Ω–æ —Å–∫—Ä—ã—Ç—å, –¥–æ–ø—É—Å—Ç–∏–º, —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é);\n   2. –í –ª—é–±–æ–µ –≤—Ä–µ–º—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (—Ç–æ –µ—Å—Ç—å –≤–µ—Å—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å);\n   3. –í –ª—é–±–æ–π –¥–µ–Ω—å (–≤–µ—Å—å —Å–≤–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∞–±—Å–æ–ª—é—Ç–Ω–æ üòà).\n_P.S. –õ—é–±—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≤—ã–±—Ä–∞–Ω –∫–∞–∫ –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –µ—Å—Ç—å –ø–æ—á—Ç–∏ —É –≤—Å–µ—Ö._\n\U00002022 _–í–µ—Ä–Ω—É—Ç—å_ –º–æ–∂–Ω–æ –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ, —Ç–∞–∫ –∏ –≤—Å–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ.\n\U00002022 –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è –≤ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏—è—Ö, –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –¥–æ–±–∞–≤–ª–µ–Ω id.\n\U00002022 –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∞–¥—Ä–µ—Å–∞:\n   _–ü–æ–ª–Ω—ã–π_ - –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –±—É–¥–µ—Ç –∞–¥—Ä–µ—Å —Ü–µ–ª–∏–∫–æ–º, –∫–∞–∫ –Ω–∞ —Å–∞–π—Ç–µ (–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–π –ø—Ä–æ—Å–ø., –¥. 35, –∫–æ—Ä–ø. –î, 204–î)\n   _–ê—É–¥–∏—Ç–æ—Ä–∏—è_ - –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –∞—É–¥–∏—Ç–æ—Ä–∏—è (204–î)\n\n' +\
              '*–†–∞–∑–¥–µ–ª "\U0001F689"*\n\U00002022 –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Å–µ—Ä–≤–∏—Å–æ–º [–Ø–Ω–¥–µ–∫—Å.–†–∞—Å–ø–∏—Å–∞–Ω–∏—è](http://rasp.yandex.ru/).\n\U00002022 –í –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ –¥–≤–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: *–∏–∑ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞* –∏ *–≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç*.\n\U00002022 –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ *3 –±–ª–∏–∂–∞–π—à–∏–º* —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞–º, –∞ –∏–º–µ–Ω–Ω–æ: _–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è_\n\U00002022 –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ *–≤—Å–µ—Ö –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è* –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫.\n\U00002022 –¢–∞–∫–∂–µ –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å *–≤—ã–±—Ä–∞—Ç—å* –Ω–∞—á–∞–ª—å–Ω—É—é –∏–ª–∏ –∫–æ–Ω–µ—á–Ω—É—é —Å—Ç–∞–Ω—Ü–∏—é –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫ –≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–ª–∏ –∏–∑ –Ω–µ–≥–æ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.\n\U00002022 –ï—Å–ª–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è *—ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫ –Ω–µ—Ç*, —Ç–æ –±–æ—Ç –ø—Ä–∏—à–ª–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ *–ø–µ—Ä–≤—ã—Ö 5* —ç–ª–µ–∫—Ç—Ä–∏—á–µ–∫ –Ω–∞ –∑–∞–≤—Ç—Ä–∞.'
# _–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞_\n"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å —ç—Ç–∏–º –±–æ—Ç–æ–º, –º–Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æüòä\n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—è–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π - —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–ª—É—á—à–∞—é –±–æ—Ç(–¥–∞–∂–µ –µ—Å–ª–∏ –≤—ã —ç—Ç–æ–≥–æ –Ω–µ –∑–∞–º–µ—á–∞–µ—Ç–µüòâ)."
briefly_info_answer = '–ö–†–ê–¢–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø\n\n*–†–∞–∑–¥–µ–ª "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"*\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å _—É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ_ –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å, –∞ —Ç–∞–∫–∂–µ _–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É_.\n\n' +\
                      '*–†–∞–∑–¥–µ–ª "‚öô"*\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å _—Å–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É_, –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è _—à–∞–±–ª–æ–Ω–∞–º–∏_ –∏–ª–∏ _–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É_ —Å –±–æ—Ç–æ–º.\n\n' +\
                      '*–†–∞–∑–¥–µ–ª "‚≠ê"*\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å _–æ—Ü–µ–Ω–∏—Ç—å –±–æ—Ç–∞_ –∏–ª–∏ _–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ_ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.\n\n' +\
                      '*–†–∞–∑–¥–µ–ª "\U0001F4DD"*\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å _—Å–∫—Ä—ã—Ç—å_ –∏–ª–∏ _–≤–µ—Ä–Ω—É—Ç—å –∑–∞–Ω—è—Ç–∏–µ_ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, –∞ —Ç–∞–∫–∂–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å _–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞_.\n\n' +\
                      '*–†–∞–∑–¥–µ–ª "\U0001F689"*\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å _—ç–ª–µ–∫—Ç—Ä–∏—á–∫–∏_ –æ—Ç –∏–ª–∏ –¥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.'

spb = 'c2'
len_prosp = 's9603435'
ligovo = 's9603837'
sosn_pol = 's9603431'
univer = 's9603770'
oran = 's9603138'
leb = 's9602688'
kalische = 's9602687'
star_petergof = 's9603547'

days = {'–ü–Ω': '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç': '–≤—Ç–æ—Ä–Ω–∏–∫', '–°—Ä': '—Å—Ä–µ–¥–∞', '–ß—Ç': '—á–µ—Ç–≤–µ—Ä–≥', '–ü—Ç': '–ø—è—Ç–Ω–∏—Ü–∞', '–°–±': '—Å—É–±–±–æ—Ç–∞'}
stations = {'–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': spb, '–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ü—Ä–æ—Å–ø–µ–∫—Ç': len_prosp, '–õ–∏–≥–æ–≤–æ': ligovo, '–°–æ—Å–Ω–æ–≤–∞—è –ü–æ–ª—è–Ω–∞': sosn_pol,
            '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç': univer}
naprs_sub = {'–ö–∞–ª–∏—â–µ': kalische, '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': spb, '–û—Ä–∞–Ω–∏–µ–Ω–±–∞—É–º-1': oran, '–õ–µ–±—è–∂—å–µ': leb, '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç': univer}
all_stations = {'–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥': spb, '–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ü—Ä–æ—Å–ø–µ–∫—Ç': len_prosp, '–õ–∏–≥–æ–≤–æ': ligovo, '–°–æ—Å–Ω–æ–≤–∞—è –ü–æ–ª—è–Ω–∞': sosn_pol,
                '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç': univer, '–û—Ä–∞–Ω–∏–µ–Ω–±–∞—É–º-1': oran, '–õ–µ–±—è–∂—å–µ': leb, '–ö–∞–ª–∏—â–µ': kalische,
                '–°—Ç–∞—Ä—ã–π –ü–µ—Ç–µ—Ä–≥–æ—Ñ': star_petergof}
all_stations_const = ['–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ü—Ä–æ—Å–ø–µ–∫—Ç', '–õ–∏–≥–æ–≤–æ', '–°–æ—Å–Ω–æ–≤–∞—è –ü–æ–ª—è–Ω–∞', '–°—Ç–∞—Ä—ã–π –ü–µ—Ç–µ—Ä–≥–æ—Ñ',
                      '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç', '–û—Ä–∞–Ω–∏–µ–Ω–±–∞—É–º-1', '–õ–µ–±—è–∂—å–µ', '–ö–∞–ª–∏—â–µ']


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å —Å–∞–π—Ç–∞
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å
def daily_tt(url, day):
    from bs4 import BeautifulSoup
    import sqlite3
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT soup FROM groups_tt WHERE url = ?", (url,))
    try:
        request = cursor.fetchone()[0]
    except TypeError:
        import requests
        request = requests.get(url, cookies=cookies).text
    cursor.close()
    bot_db.close()
    soup = BeautifulSoup(request, "lxml")
    table = soup.find('div', class_="panel-group")
    days = table.find_all('div', class_="panel panel-default")
    n = 0
    lessons = []
    for day_table in days:  # –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
        date = day_table.find('h4').text
        if type(day) == int:
            if date.split()[1] != str(day):
                n += 1
                continue
            break
        else:
            if date.split(',')[0].strip() != day:
                n += 1
                continue
            break
    if n == len(days):
        timetable = {'weekday': '–í—ã—Ö–æ–¥–Ω–æ–π'}
    else:
        for lesson in days[n].find_all('li'):  # –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä –≤ –Ω—É–∂–Ω–æ–º –¥–Ω–µ
            if lesson.get('title') == '–ó–∞–Ω—è—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ':
                continue
            else:
                spans = lesson.find_all('span')  # –±–µ—Ä–µ—Ç—Å—è –≤—Å—è –∏–Ω—Ñ–∞ –ø—Ä–æ –ø–∞—Ä—ã - —Å–ø–∏—Å–æ–∫
                if str(lesson.find('tbody')) == 'None':
                    if len(spans) == 6 or len(spans) == 7:
                        lessons.append({'time': spans[0].text.strip(),
                                        'name': spans[1].text.strip(),
                                        'place': spans[2].text.strip(),
                                        'teacher': spans[5].text.strip()})
                    else:
                        lessons.append({'time': spans[0].text.strip(),
                                        'name': spans[1].text.strip(),
                                        'place': '',
                                        'teacher': ''})
                else:
                    hidden_info = lesson.find('tbody')
                    hidden_places = []
                    hidden_teachers = []
                    for hidden_str in hidden_info.find_all('tr'):
                        hidden_places.append(hidden_str.find('span').text.strip())
                        hidden_teachers.append(';'.join([teacher.text.strip() for teacher in hidden_str.find_all('a')]))
                    lessons.append({'time': spans[0].text.strip(),
                                    'name': spans[1].text.strip(),
                                    'place': '//'.join(hidden_places),
                                    'teacher': '//'.join(hidden_teachers)})
        timetable = {'weekday': days[n].find('h4').text.strip(),
                     'lessons': lessons}
    return timetable


# —Å–æ–±–∏—Ä–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–∞–±–æ—Ä–∞ –ø–∞—Ä
def create_answer(info_for_message, user_id, personal=True, next_week=False):
    import sqlite3
    answer = ''
    if info_for_message.get('weekday').split(',')[0] == '–í—ã—Ö–æ–¥–Ω–æ–π':
        answer += '\U0001F634 –í—ã—Ö–æ–¥–Ω–æ–π'
    elif len(info_for_message.get('lessons')) == 0:
        answer += '\U0001F634 –í—ã—Ö–æ–¥–Ω–æ–π\n\n–í —ç—Ç–æ—Ç –¥–µ–Ω—å –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è –æ—Ç–º–µ–Ω–∏–ª–∏'
    else:
        if next_week:
            answer += info_for_message.get('weekday').split(',')[1] + ' => '
        answer += 'üìÖ ' + info_for_message.get('weekday').split(',')[0].upper() + '\n\n'
        if personal:
            bot_db = sqlite3.connect('Bot_db')
            cursor = bot_db.cursor()
            cursor.execute(
                "SELECT l.name, l.type, l.day, l.time FROM skips AS s JOIN lessons AS l ON l.id = s.lesson_id WHERE user_id = ?", (
                    user_id,))
            skips = cursor.fetchall()
            cursor.close()
            bot_db.close()
        else:
            skips = []
        for lesson in info_for_message.get('lessons'):
            flag = False
            for skip in skips:
                if skip[0] == lesson.get('name').split(',')[0] and skip[1] == lesson.get('name').split(',')[
                    1].strip() and (skip[2] == info_for_message.get('weekday').split(',')[0] or skip[2] == 'all') and (
                        skip[3] == lesson.get('time') or skip[3] == 'all'):
                    flag = True
                    break
            if flag:
                continue
            answer += 'üïí ' + lesson.get('time') + '\n'
            try:
                if lesson.get('name').split(',')[1].strip() == '–ª–µ–∫—Ü–∏—è':
                    answer += '*–õ - '
                elif lesson.get('name').split(',')[1].strip() == '–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ':
                    answer += '*–ü–† - '
                elif lesson.get('name').split(',')[1].strip() == '–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞':
                    answer += '*–õ–† - '
                else:
                    answer += '*' + lesson.get('name').split(',')[1].strip().upper() + ' - '
            except IndexError:
                answer += '*'
            answer += lesson.get('name').split(',')[0] + '*\n'
            places = lesson.get('place')
            teachers = lesson.get('teacher')
            for i in range(len(places.split('//'))):
                if i > 0 and places.split('//')[i] == places.split('//')[i - 1] and teachers.split('//')[i] == \
                        teachers.split('//')[i - 1]:
                    continue
                for teacher in teachers.split('//')[i].split(';'):
                    if is_full_place(user_id):
                        answer += places.split('//')[i].strip()
                    else:
                        answer += places.split('//')[i].split(',')[-1].strip()
                    if len(teacher.split(',')[0].strip()) > 0:
                        answer += ' (' + teacher.split(',')[0].strip() + ')'
                    else:
                        answer += ''
                    if teacher != teachers.split('//')[i].split(';')[-1]:
                        answer += ';\n'
                if places.split('//')[i].strip() != places.split('//')[-1].strip():
                    answer += ';\n'
            answer += '\n'
            answer += '\n'
    return answer


# –ø–æ–ª—É—á–∞–µ–º url –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
def get_url(user_id):
    import sqlite3
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT url FROM users WHERE id = ?", (user_id,))
    url = cursor.fetchone()[0]
    cursor.close()
    bot_db.close()

    return url


# –ø–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ–ª–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
def is_full_place(user_id):
    import sqlite3
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT full_place FROM users WHERE id = ?", (user_id,))
    is_full_place = cursor.fetchone()[0]
    cursor.close()
    bot_db.close()

    return is_full_place


def get_group(user_id):
    from bs4 import BeautifulSoup
    import sqlite3
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT url FROM users WHERE id = ?", (user_id,))
    url = cursor.fetchone()[0]
    cursor.execute("SELECT soup FROM groups_tt WHERE url = ?", (url,))
    request = cursor.fetchone()[0]
    cursor.close()
    bot_db.close()
    soup = BeautifulSoup(request, "lxml")
    group = soup.find('h2').text. split(' ')[1]
    return '–¢–≤–æ—è –≥—Ä—É–ø–ø–∞: <b>{0}</b>\n'.format(group)


def get_groups_name(user_id):
    from bs4 import BeautifulSoup
    import sqlite3
    groups = {}
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT group_id FROM groups_with_users WHERE user_id = ?", (user_id,))
    ids = cursor.fetchall()
    for id in ids:
        cursor.execute("SELECT soup FROM groups_tt WHERE id = ?", (id[0],))
        request = cursor.fetchone()[0]
        soup = BeautifulSoup(request, "lxml")
        groups[soup.find('h2').text.split(' ')[1]] = id[0]
    cursor.close()
    bot_db.close()
    return groups


def is_skips(user_id):
    import sqlite3
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT count(*) FROM skips WHERE user_id = ?", (user_id,))
    returning = cursor.fetchone()[0]
    cursor.close()
    bot_db.close()
    return returning


def get_interim_attestation_answer(data, user_id, only_exams=True):
    import sqlite3
    from bs4 import BeautifulSoup
    info_about_lesson = ''
    answer = ''
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("SELECT interim_attestation FROM groups_tt WHERE url = ?", (get_url(user_id),))
    ia_soup = BeautifulSoup(cursor.fetchone()[0], "lxml")
    cursor.close()
    bot_db.close()
    months = ia_soup.find_all('div', class_="panel panel-default")
    n = 0
    for month_table in months:  # –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–≥–æ –¥–Ω—è
        month = month_table.find('h4').text.strip()
        if month != data:
            n += 1
            continue
        break
    for lesson in months[n].find_all('li'):
        datetime = lesson.find('div', class_="col-sm-2 studyevent-datetime").text.strip()
        info_about_lesson = 'üìÖ ' + datetime.split(' ')[0] + ' ' + datetime.split(' ')[1] + '\n'
        info_about_lesson += 'üïí ' + datetime.split(' ')[2] + '\n'
        lesson_name = lesson.find('div', class_="col-sm-4 studyevent-subject").text.strip()
        if only_exams and ('–∫–æ–º–∏—Å—Å–∏—è' in lesson_name or '–ø–µ—Ä–µ—Å–¥–∞—á–∞' in lesson_name or '–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –≥—Ä—É–ø–ø–æ–≤–∞—è' in lesson_name):
            continue
        info_about_lesson += '<b>' + ', '.join(lesson_name.split(', ')[1:]).upper() + ' - ' + lesson_name.split(', ')[0] + \
                             '</b>\n'
        if lesson.find('div', class_="studyevent-location-educator-modal hidden"):
            hidden_info = lesson.find('tbody')
            hidden_places = []
            hidden_teachers = []
            for hidden_str in hidden_info.find_all('tr'):
                hidden_places.append(hidden_str.find('span').text.strip())
                hidden_teachers.append(';'.join([teacher.text.strip() for teacher in hidden_str.find_all('a')]))
            places = '//'.join(hidden_places)
            teachers = '//'.join(hidden_teachers)
        else:
            places = lesson.find('div', class_="col-sm-3 studyevent-locations").text.strip()
            teachers = lesson.find('div', class_="col-sm-3 studyevent-educators").text.strip()
        for i in range(len(places.split('//'))):
            if i > 0 and places.split('//')[i] == places.split('//')[i - 1] and teachers.split('//')[i] == \
                    teachers.split('//')[i - 1]:
                continue
            for teacher in teachers.split('//')[i].split(';'):
                if is_full_place(user_id):
                    info_about_lesson += places.split('//')[i].strip()
                else:
                    info_about_lesson += places.split('//')[i].split(',')[-1].strip()
                if len(teacher.split(',')[0].strip()) > 0:
                    info_about_lesson += ' (' + teacher.split(',')[0].strip() + ')'
                else:
                    info_about_lesson += ''
                if teacher != teachers.split('//')[i].split(';')[-1]:
                    info_about_lesson += ';\n'
            if places.split('//')[i].strip() != places.split('//')[-1].strip():
                info_about_lesson += ';\n'
        answer += info_about_lesson + '\n\n'
    return answer


def set_next_step(step, user_id):
    import sqlite3
    bot_db = sqlite3.connect('Bot_db')
    cursor = bot_db.cursor()
    cursor.execute("UPDATE users SET step = ? WHERE id = ?", (step, user_id))
    bot_db.commit()
    cursor.close()
    bot_db.close()

# –ª–æ–≥ –±–æ—Ç–∞
def log(message, answer):
    from datetime import datetime
    print('\n------------')
    print(datetime.now())
    print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1}. id = {2}\n–¢–µ–∫—Å—Ç - {3}".format(message.from_user.first_name,
                                                               message.from_user.last_name,
                                                               str(message.from_user.id),
                                                               message.text))
    print('–û—Ç–≤–µ—Ç - ' + answer)
    print('------------\n')
